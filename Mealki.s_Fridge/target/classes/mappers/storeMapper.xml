<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.storeMapper">

	<select id="getItemListMapStore" resultType="map">
		select *
		from products inner
		join stock
		on products.item_num = stock.item_num
		where supplier is not null and products.item_type like '%식자재'
	</select>

	<select id="getPlaceOrderListStore" resultType="map">
		select sto_num, COALESCE(store.sto_progress, '미입고') AS sto_progress,
		placeorder.order_num,placeorder.order_qty, products.item_name, sto_empNum, 
		stock.stk_qnt,placeorder.emp_num
		from store 
		right Outer join placeorder on placeorder.order_num = store.order_num
		left outer join products on placeorder.item_num = products.item_num
		left join stock on products.item_num = stock.item_num
        where COALESCE(store.sto_progress, '미입고')='미입고'
	</select>
	
	<insert id="insertStore">
		 insert into store (sto_num,order_num,sto_date,sto_progress,sto_qty,
			    sto_shelf,sto_shelfDetail,sto_empNum)
				  values (
				    concat('ST',DATE_FORMAT(NOW(), '%y%m%d%H%i%S')),
				    #{order_num}, 
				    #{sto_date}, 
				    #{sto_progress}, 
				    #{sto_qty}, 
				    #{sto_shelf},
				    #{sto_shelfDetail},
				    #{sto_empNum}
				  )
	</insert>
	

<!-- 
select s.sto_num, s.sto_progress, st.stk_qnt
from store s join placeorder p
on s.order_num = p.order_num
join stock st
on st.item_num = p.item_num
order by s.sto_num desc; -->

</mapper>